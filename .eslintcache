[{"/Users/catanh/Desktop/coderschool/mymovie/src/index.js":"1","/Users/catanh/Desktop/coderschool/mymovie/src/App.js":"2","/Users/catanh/Desktop/coderschool/mymovie/src/reportWebVitals.js":"3","/Users/catanh/Desktop/coderschool/mymovie/src/components/PublicNavBar.js":"4","/Users/catanh/Desktop/coderschool/mymovie/src/page/MovieListPage.js":"5","/Users/catanh/Desktop/coderschool/mymovie/src/components/DetailMovie.js":"6","/Users/catanh/Desktop/coderschool/mymovie/src/components/SearchForm.js":"7","/Users/catanh/Desktop/coderschool/mymovie/src/components/PaginationBar.js":"8","/Users/catanh/Desktop/coderschool/mymovie/src/components/MovieList.js":"9","/Users/catanh/Desktop/coderschool/mymovie/src/components/Movie.js":"10","/Users/catanh/Desktop/coderschool/mymovie/src/components/Review.js":"11"},{"size":589,"mtime":1610900958361,"results":"12","hashOfConfig":"13"},{"size":1347,"mtime":1618326692519,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610899839694,"results":"15","hashOfConfig":"13"},{"size":1652,"mtime":1618339164724,"results":"16","hashOfConfig":"13"},{"size":1981,"mtime":1618339927899,"results":"17","hashOfConfig":"13"},{"size":2764,"mtime":1618340441000,"results":"18","hashOfConfig":"13"},{"size":674,"mtime":1618339047641,"results":"19","hashOfConfig":"13"},{"size":1656,"mtime":1610938724827,"results":"20","hashOfConfig":"13"},{"size":2627,"mtime":1618336310333,"results":"21","hashOfConfig":"13"},{"size":3148,"mtime":1618339578561,"results":"22","hashOfConfig":"13"},{"size":2242,"mtime":1618348104660,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1kn87ms",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/catanh/Desktop/coderschool/mymovie/src/index.js",[],["51","52"],"/Users/catanh/Desktop/coderschool/mymovie/src/App.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/reportWebVitals.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/PublicNavBar.js",["53"],"import React from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Nav, NavDropdown } from \"react-bootstrap\";\n\nfunction PublicNavBar({ query, setQuery }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const history = useHistory();\n\n  const handleSearch = (e) => {\n    console.log(e.target.value);\n    setSearchTerm(e.target.value);\n  };\n\n  const handleSearchSubmit = (e) => {\n    e.preventDefault();\n    let newQuery = searchTerm;\n    setQuery(newQuery);\n    setSearchTerm(\"\");\n    history.push(`/search/${searchTerm}`);\n  };\n\n  return (\n    <Navbar\n      collapseOnSelect\n      expand=\"lg\"\n      variant=\"dark\"\n      className=\"nav_text nav\"\n    >\n      <Navbar.Brand\n        as={Link}\n        to=\"/movie/now_playing\"\n        className=\"nav_brand font-weight-bold\"\n      >\n        KATY MOVIE\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\n        <Nav className=\"mr-auto\" style={{ textAlign: \"center\" }}>\n          <Nav.Link as={Link} to=\"/movie/upcoming\">\n            UPCOMING\n          </Nav.Link>\n\n          <Nav.Link as={Link} to=\"/movie/top_rated\">\n            TOP MOVIES\n          </Nav.Link>\n        </Nav>\n        <Nav>\n          <SearchForm\n            className=\"d-flex\"\n            handleSearch={handleSearch}\n            handleSearchSubmit={handleSearchSubmit}\n            searchTerm={searchTerm}\n          />\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default PublicNavBar;\n","/Users/catanh/Desktop/coderschool/mymovie/src/page/MovieListPage.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/DetailMovie.js",["54"],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Movie from \"./Movie\";\nimport { Link } from \"react-router-dom\";\nimport { MDBView, MDBContainer } from \"mdbreact\";\nimport Review from \"./Review\";\n\nconst APIKEY = process.env.REACT_APP_KEYAPI;\nconst APIURL = process.env.REACT_APP_URL;\n\nfunction DetailMovie() {\n  const [movie, setMovie] = useState();\n  const [similarMovies, setSimilarMovies] = useState([]);\n  const [isLoading, setIsloading] = useState(true);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsloading(true);\n      try {\n        const url = `${APIURL}movie/${id}?api_key=${APIKEY}&language=en-US`;\n        const response = await fetch(url);\n        const data = await response.json();\n\n        console.log(\"url\", url);\n\n        setMovie(data);\n        setIsloading(false);\n      } catch (e) {\n        console.log(\"loading data error\", e);\n      }\n    };\n    fetchData();\n  }, [id]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = `${APIURL}movie/${id}/similar?api_key=${APIKEY}&language=en-US`;\n        const response = await fetch(url);\n        const data = await response.json();\n\n        console.log(\"url\", url);\n\n        setSimilarMovies(data.results);\n      } catch (e) {\n        console.log(\"loading data error\", e);\n      }\n    };\n    fetchData();\n  }, [id]);\n\n  const similarMoviesComp = (\n    <div>\n      <h1\n        className=\"text-white px-5 \"\n        style={{ marginLeft: \"-30px\", paddingTop: \"10%\" }}\n      >\n        Similar Movies\n      </h1>\n      <div\n        style={{ overflowX: \"scroll\", overflowY: \"hidden\" }}\n        className=\"d-flex\"\n      >\n        {similarMovies.map((movie, index) => {\n          if (movie.poster_path !== null)\n            return (\n              <Link to={`/movie/${movie.id}`} className=\"linkMovie\" key={index}>\n                <MDBContainer style={{ width: \"250px\" }} className=\"pt-5\">\n                  <MDBView hover zoom>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w1280${movie.poster_path}`}\n                      className=\"img-fluid\"\n                      alt={movie.title}\n                      style={{ cursor: \"pointer\" }}\n                    />\n                  </MDBView>\n                </MDBContainer>\n              </Link>\n            );\n        })}\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      {isLoading || !similarMovies ? (\n        <></>\n      ) : (\n        <div>\n          <Movie movie={movie} id={id} />\n          <Review id={id} />\n          {similarMovies.length !== 0 ? similarMoviesComp : <></>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default DetailMovie;\n","/Users/catanh/Desktop/coderschool/mymovie/src/components/SearchForm.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/PaginationBar.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/MovieList.js",["55"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardDeck, Col, Row, Container } from \"react-bootstrap\";\n// import { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\n// import { faStar } from \"@fortawesome/free-solid-svg-icons\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MDBMask, MDBView, MDBContainer } from \"mdbreact\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nfunction MovieList({ movieList }) {\n  return (\n    <Container style={{ width: \"60%\" }}>\n      <CardDeck>\n        <Row>\n          {movieList.map((movie, index) => {\n            if (movie.poster_path !== null)\n              return (\n                <Col md={4} className=\"pt-5\" style={{ witdh: \"18rem\" }}>\n                  <Link\n                    to={`/movie/${movie.id}`}\n                    // to={`/movie/${movie.id}/${movie.original_title.replace(\n                    //   /\\s/g,\n                    //   \"+\"\n                    // )}`}\n                    className=\"linkMovie\"\n                    key={index}\n                  >\n                    <MDBContainer>\n                      <MDBView hover zoom>\n                        <img\n                          src={`https://image.tmdb.org/t/p/w1280${movie.poster_path}`}\n                          className=\"img-fluid\"\n                          alt={movie.title}\n                        />\n                        <MDBMask\n                          className=\"d-flex container-fluid\"\n                          overlay=\"black-strong\"\n                        >\n                          <div className=\"text-center text-white scroll\">\n                            <h3 className=\"py-3\">{movie.title}</h3>\n\n                            {movie.release_date !== undefined\n                              ? movie.release_date.substring(0, 4)\n                              : \"\"}\n\n                            {movie.overview}\n                          </div>\n                        </MDBMask>\n                      </MDBView>\n                      <Card.Footer style={{ fontSize: 15 }}>\n                        <span className=\"text-danger h5\">&#9733;</span>\n                        {` ${movie.vote_average}`}\n                      </Card.Footer>\n                      <p style={{ fontSize: 15 }}>\n                        <span className=\"text-danger\">&hearts;</span>\n                        {` ${movie.popularity}`}\n                      </p>\n                    </MDBContainer>\n                  </Link>\n                </Col>\n              );\n          })}\n        </Row>\n      </CardDeck>\n    </Container>\n  );\n}\n\nexport default MovieList;\n","/Users/catanh/Desktop/coderschool/mymovie/src/components/Movie.js",["56"],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Modal } from \"react-bootstrap\";\nimport ReactPlayer from \"react-player\";\n\nconst APIKEY = process.env.REACT_APP_KEYAPI;\n\nfunction Movie({ movie, id }) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchData() {\n      if (movie.video !== false) {\n        const url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${APIKEY}&language=en-US`;\n        let response = await fetch(url);\n        let data = await response.json();\n        console.log(\"data in trailer\", data);\n        setTrailerUrl(`https://www.youtube.com/watch?v=${data.results[0].key}`);\n      }\n    }\n    fetchData();\n  }, [id]);\n\n  console.log(trailerUrl);\n\n  return (\n    <div className=\"background-image-position\">\n      <div className=\"image-inf\">\n        <Row>\n          <Col sm={6} className=\"pt-5\" style={{ textAlign: \"center\" }}>\n            <a href={movie && movie.homepage ? movie.homepage : \"#\"}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt=\"\"\n                style={{ width: \"70%\" }}\n              />\n            </a>\n          </Col>\n\n          <Col sm={6} className=\"pt-5\">\n            <div className=\"card-body d-flex align-items-center\">\n              <div>\n                <h5 className=\"movie_detail\" style={{ fontSize: \"3rem\" }}>\n                  {movie.original_title}\n                </h5>\n                <p className=\"movie_detail  pt-2\">\n                  <FontAwesomeIcon icon={faStar} color=\"red\" />{\" \"}\n                  {movie.vote_average}\n                </p>\n                <p className=\"movie_detail\">{movie.overview}</p>\n\n                {movie.video !== false ? (\n                  <FontAwesomeIcon\n                    icon={faPlayCircle}\n                    className=\"fas fa-play play_button \"\n                    data-toggle=\"tooltip\"\n                    data-placement=\"bottom\"\n                    title=\"Play Trailer\"\n                    color=\"red\"\n                    size=\"4x\"\n                    onClick={handleShow}\n                  />\n                ) : (\n                  <></>\n                )}\n              </div>\n\n              <Modal show={show} onHide={handleClose} size=\"lg\">\n                <Modal.Body\n                  style={{\n                    backgroundColor: \"black\",\n                  }}\n                >\n                  <ReactPlayer url={trailerUrl} />\n                </Modal.Body>\n              </Modal>\n            </div>\n          </Col>\n        </Row>\n      </div>\n      <img\n        src={`https://image.tmdb.org/t/p/w1280/${movie.backdrop_path}`}\n        className=\"background-image\"\n        alt=\"i\"\n      />\n    </div>\n  );\n}\n\nexport default Movie;\n","/Users/catanh/Desktop/coderschool/mymovie/src/components/Review.js",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":6,"column":15,"nodeType":"65","messageId":"66","endLine":6,"endColumn":26},{"ruleId":"67","severity":1,"message":"68","line":66,"column":43,"nodeType":"69","messageId":"70","endLine":66,"endColumn":45},{"ruleId":"67","severity":1,"message":"68","line":15,"column":41,"nodeType":"69","messageId":"70","endLine":15,"endColumn":43},{"ruleId":"71","severity":1,"message":"72","line":29,"column":6,"nodeType":"73","endLine":29,"endColumn":10,"suggestions":"74"},{"ruleId":"63","severity":1,"message":"75","line":10,"column":19,"nodeType":"65","messageId":"66","endLine":10,"endColumn":29},{"ruleId":"71","severity":1,"message":"76","line":25,"column":6,"nodeType":"73","endLine":25,"endColumn":10,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'movie.video'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'setPageNum' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pageNum' and 'reviews'. Either include them or remove the dependency array.",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [id, movie.video]",{"range":"86","text":"87"},"Update the dependencies array to be: [id, pageNum, reviews]",{"range":"88","text":"89"},[1069,1073],"[id, movie.video]",[897,901],"[id, pageNum, reviews]"]
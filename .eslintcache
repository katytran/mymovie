[{"/Users/catanh/Desktop/coderschool/mymovie/src/index.js":"1","/Users/catanh/Desktop/coderschool/mymovie/src/App.js":"2","/Users/catanh/Desktop/coderschool/mymovie/src/reportWebVitals.js":"3","/Users/catanh/Desktop/coderschool/mymovie/src/components/PublicNavBar.js":"4","/Users/catanh/Desktop/coderschool/mymovie/src/page/MovieListPage.js":"5","/Users/catanh/Desktop/coderschool/mymovie/src/components/DetailMovie.js":"6","/Users/catanh/Desktop/coderschool/mymovie/src/components/SearchForm.js":"7","/Users/catanh/Desktop/coderschool/mymovie/src/components/PaginationBar.js":"8","/Users/catanh/Desktop/coderschool/mymovie/src/components/MovieList.js":"9","/Users/catanh/Desktop/coderschool/mymovie/src/components/Movie.js":"10"},{"size":589,"mtime":1610900958361,"results":"11","hashOfConfig":"12"},{"size":1353,"mtime":1611021868502,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610899839694,"results":"14","hashOfConfig":"12"},{"size":1190,"mtime":1610960409305,"results":"15","hashOfConfig":"12"},{"size":2495,"mtime":1611022942456,"results":"16","hashOfConfig":"12"},{"size":1007,"mtime":1611026613592,"results":"17","hashOfConfig":"12"},{"size":620,"mtime":1610960295873,"results":"18","hashOfConfig":"12"},{"size":1656,"mtime":1610938724827,"results":"19","hashOfConfig":"12"},{"size":2402,"mtime":1611027739498,"results":"20","hashOfConfig":"12"},{"size":3161,"mtime":1611026613593,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1nlzn0j",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/catanh/Desktop/coderschool/mymovie/src/index.js",[],["46","47"],"/Users/catanh/Desktop/coderschool/mymovie/src/App.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/reportWebVitals.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/PublicNavBar.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/page/MovieListPage.js",["48","49","50","51","52"],"import { queryHelpers } from \"@testing-library/react\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport PaginationBar from \"../components/PaginationBar\";\nimport MovieList from \"../components/MovieList\";\nimport { useParams } from \"react-router-dom\";\n\nconst APIKEY = process.env.REACT_APP_KEYAPI;\nconst APIURL = process.env.REACT_APP_URL;\n\nfunction MovieListPage({ type, query }) {\n  const [movieList, setMovieList] = useState([]);\n  const [pageNum, setPagenum] = useState(1);\n  const [isLoading, setIsloading] = useState(true);\n  const [filterMovies, setFilterMovies] = useState([]);\n  const [totalPage, setTotalPage] = useState(1);\n  let endPoint;\n  if (window.location.href.includes(\"search\")) {\n    type = \"search\";\n    let lastSlash = window.location.href.lastIndexOf(\"/\");\n    query = window.location.href.substring(lastSlash + 1);\n  }\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsloading(true);\n      if (type === \"now_playing\") {\n        endPoint = \"movie/now_playing\";\n      }\n      if (type === \"upcoming\") {\n        endPoint = \"movie/upcoming\";\n      }\n\n      if (type === \"top_rated\") {\n        endPoint = \"movie/top_rated\";\n      }\n\n      let url = `${APIURL}${endPoint}?api_key=${APIKEY}&language=en-US&page=${pageNum}`;\n\n      if (type === \"search\") {\n        url = `${APIURL}search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=${pageNum}`;\n      }\n      console.log(\"query\", query);\n\n      const response = await fetch(url);\n      const data = await response.json();\n\n      console.log(url);\n      setMovieList(data.results);\n      //setFilterMovies(data.results);\n      setTotalPage(data.total_pages);\n      setIsloading(false);\n    };\n    fetchData();\n  }, [type, pageNum, query]);\n\n  // useEffect(() => {\n  //   console.log(\"Search term\", searchTerm);\n  //   // if (searchTerm !== \"\") {\n  //   //   let filter = movieList.filter((movie) => {\n  //   //     return movie.original_title\n  //   //       .toLowerCase()\n  //   //       .includes(searchTerm.toLowerCase());\n  //   //   });\n  //   //   setFilterMovies(filter);\n  //   // }\n  // }, [searchTerm]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <h1>isLoading</h1>\n      ) : (\n        <div>\n          <MovieList movieList={movieList} />\n          <PaginationBar\n            pageNum={pageNum}\n            setPageNum={setPagenum}\n            totalPageNum={totalPage}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieListPage;\n","/Users/catanh/Desktop/coderschool/mymovie/src/components/DetailMovie.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/SearchForm.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/PaginationBar.js",[],"/Users/catanh/Desktop/coderschool/mymovie/src/components/MovieList.js",["53","54","55","56"],"import React from \"react\";\nimport DetailMovie from \"./DetailMovie\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardDeck, Col, Row, Container } from \"react-bootstrap\";\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MDBMask, MDBView, MDBContainer } from \"mdbreact\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nfunction MovieList({ movieList }) {\n  //console.log(movieList);\n  return (\n    <Container className=\"col-8\">\n      <CardDeck>\n        <Row>\n          {movieList.map((movie, index) => {\n            return (\n              <Col md={4} className=\"pt-5\" style={{ witdh: \"18rem\" }}>\n                <Link\n                  to={`/movie/${movie.id}/${movie.original_title}`}\n                  className=\"linkMovie\"\n                  key={index}\n                >\n                  <MDBContainer>\n                    <MDBView hover zoom>\n                      <img\n                        src={`https://image.tmdb.org/t/p/w1280${movie.poster_path}`}\n                        className=\"img-fluid\"\n                        alt={movie.title}\n                      />\n                      <MDBMask\n                        className=\"d-flex container-fluid\"\n                        overlay=\"black-strong\"\n                      >\n                        <div className=\"text-center text-white scroll\">\n                          <h3 className=\"py-3\">{movie.title}</h3>\n\n                          {movie.release_date !== undefined\n                            ? movie.release_date.substring(0, 4)\n                            : \"\"}\n\n                          {movie.overview}\n                        </div>\n                      </MDBMask>\n                    </MDBView>\n                    <Card.Footer style={{ fontSize: 15 }}>\n                      <span className=\"text-danger h5\">&#9733;</span>\n                      {movie.vote_average}\n                    </Card.Footer>\n                    <p style={{ fontSize: 15 }}>\n                      <span className=\"text-danger\">&hearts;</span>\n                      {movie.popularity}\n                    </p>\n                  </MDBContainer>\n                </Link>\n              </Col>\n            );\n          })}\n        </Row>\n      </CardDeck>\n    </Container>\n  );\n}\n\nexport default MovieList;\n","/Users/catanh/Desktop/coderschool/mymovie/src/components/Movie.js",["57","58","59","60","61"],"import React, { useState, useEffect } from \"react\";\nimport { Image, Container, Row, Col } from \"react-bootstrap\";\nimport { faPlayCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport ReactPlayer from \"react-player\";\n\nconst APIKEY = process.env.REACT_APP_KEYAPI;\n\nfunction Movie({ movie, id }) {\n  console.log(movie);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const url = `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${APIKEY}&language=en-US`;\n      let response = await fetch(url);\n      let data = await response.json();\n      console.log(data);\n\n      setTrailerUrl(`https://www.youtube.com/watch?v=${data.results[0].key}`);\n    }\n    fetchData();\n  }, []);\n  console.log(trailerUrl);\n  return (\n    <div\n      className=\"background-image-position\"\n      /* className=\"movie_container\" */\n      /* style={{\n        backgroundImage: `url(https://image.tmdb.org/t/p/w1280/srYya1ZlI97Au4jUYAktDe3avyA.jpg)`,\n      }} */\n    >\n      <div className=\"image-inf\">\n        <Col md={6} className=\"pt-5\" style={{ textAlign: \"center\" }}>\n          <a href={movie.homepage}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt=\"\"\n              style={{ width: \"70%\" }}\n            />\n\n            {/* <Button variant=\"primary\" onClick={handleShow}>\n              {\" \"}\n              Trailer\n            </Button> */}\n          </a>\n        </Col>\n\n        <Col md={6} className=\"pt-5\">\n          <div className=\"card-body\">\n            <h5 className=\"movie_detail\" style={{ fontSize: \"3rem\" }}>\n              {movie.original_title}{\" \"}\n            </h5>\n            <span className=\"movie_detail\">{movie.overview}</span>\n            <span>{movie.release_date}</span>\n            <span className=\"movie_detail float-right pt-2\">\n              <FontAwesomeIcon icon={faStar} color=\"red\" /> {movie.vote_average}\n            </span>\n            <FontAwesomeIcon\n              icon={faPlayCircle}\n              className=\"fas fa-play play_button\"\n              data-toggle=\"tooltip\"\n              data-placement=\"bottom\"\n              title=\"Play Trailer\"\n              color=\"red\"\n              size=\"4x\"\n              onClick={handleShow}\n            />\n            <Modal show={show} onHide={handleClose} size=\"lg\">\n              <Modal.Body\n                /* style={{ maxWidth: \"fit-content\" }} */ style={{\n                  backgroundColor: \"black\",\n                }}\n              >\n                <ReactPlayer url={trailerUrl} />\n              </Modal.Body>\n            </Modal>\n          </div>\n        </Col>\n      </div>\n      <img\n        src=\"https://image.tmdb.org/t/p/w1280/srYya1ZlI97Au4jUYAktDe3avyA.jpg\"\n        className=\"background-image\"\n        alt=\"i\"\n      />\n    </div>\n  );\n}\n\nexport default Movie;\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":10,"nodeType":"68","messageId":"69","endLine":1,"endColumn":22},{"ruleId":"66","severity":1,"message":"70","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":19},{"ruleId":"66","severity":1,"message":"71","line":15,"column":10,"nodeType":"68","messageId":"69","endLine":15,"endColumn":22},{"ruleId":"66","severity":1,"message":"72","line":15,"column":24,"nodeType":"68","messageId":"69","endLine":15,"endColumn":39},{"ruleId":"73","severity":1,"message":"74","line":27,"column":20,"nodeType":"75","endLine":27,"endColumn":39},{"ruleId":"66","severity":1,"message":"76","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":19},{"ruleId":"66","severity":1,"message":"77","line":5,"column":10,"nodeType":"68","messageId":"69","endLine":5,"endColumn":22},{"ruleId":"66","severity":1,"message":"78","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":16},{"ruleId":"66","severity":1,"message":"79","line":7,"column":10,"nodeType":"68","messageId":"69","endLine":7,"endColumn":25},{"ruleId":"66","severity":1,"message":"80","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":15},{"ruleId":"66","severity":1,"message":"81","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":26},{"ruleId":"66","severity":1,"message":"82","line":2,"column":28,"nodeType":"68","messageId":"69","endLine":2,"endColumn":31},{"ruleId":"66","severity":1,"message":"83","line":6,"column":17,"nodeType":"68","messageId":"69","endLine":6,"endColumn":23},{"ruleId":"73","severity":1,"message":"84","line":28,"column":6,"nodeType":"85","endLine":28,"endColumn":8,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'queryHelpers' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'filterMovies' is assigned a value but never used.","'setFilterMovies' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'endPoint' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'DetailMovie' is defined but never used.","'faPlayCircle' is defined but never used.","'faStar' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'Image' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [id]",{"range":"92","text":"93"},[1045,1047],"[id]"]